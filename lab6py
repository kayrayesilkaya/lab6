#TASK 1:

def factorial(x):
    """
    Calculates the factorial of x recursively.
    :param x: Non-negative integer
    :return: Factorial of x
    """
    if x == 0 or x == 1:
        return 1
    return x * factorial(x - 1)

# 2. 
def sine_x(x, n):
    """
    Calculates the sine of x (in degrees) using the first n terms of the Taylor series.
    :param x: Angle in degrees
    :param n: Number of terms in the series
    :return: Approximation of sine(x)
    """
    
    x_rad = x * (math.pi / 180)

   
    term = lambda k: ((-1) ** k) * (x_rad ** (2 * k + 1)) / factorial(2 * k + 1)

    
    result = 0
    for k in range(n):
        result += term(k)
    return result

# 3. 
result = 0  

def recursive_equation(n):
    """
    Solves the equation recursively and updates the global variable `result`.
    Equation: result += 1 / n
    :param n: Positive integer
    :return: None
    """
    global result
    if n == 0:
        return
    result += 1 / n
    recursive_equation(n - 1)

# Example
if __name__ == "__main__":
    # Question 1
    print("Factorial of 5:", factorial(5))

    # Question 2
    x = float(input("Enter the angle in degrees: "))
    n = int(input("Enter the number of terms: "))
    print(f"Sine({x}) using {n} terms:", sine_x(x, n))

    # Question 3
    n = int(input("Enter the value of n for the recursive equation: "))
    recursive_equation(n)
    print("Result of the recursive equation:", result)
